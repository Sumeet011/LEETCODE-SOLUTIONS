# 3724. Minimum Operations to Transform Array

**Difficulty:** Medium  
**Status:** Solved  
**Premium:** ğŸ”’  
**Companies:**  

---

## Problem

You are given two integer arrays `nums1` of length `n` and `nums2` of length `n + 1`.

You want to transform `nums1` into `nums2` using the **minimum number of operations**.

You may perform the following operations **any number of times**, each time choosing an index `i`:

1. Increase `nums1[i]` by 1.  
2. Decrease `nums1[i]` by 1.  
3. Append `nums1[i]` to the end of the array.

Return the **minimum number of operations** required to transform `nums1` into `nums2`.

---

## Solution (Python)

```python
from typing import List

class Solution:
    def minOperations(self, nums1: List[int], nums2: List[int]) -> int:
        Ans = 0
        Min = float('inf')
        
        for i in range(len(nums1)):
            # Cost to make nums1[i] equal to nums2[i]
            Ans += abs(nums2[i] - nums1[i])
            
            # Check if the last element can be "inserted" with 1 extra operation
            if nums2[-1] >= min(nums2[i], nums1[i]) and nums2[-1] <= max(nums2[i], nums1[i]):
                Min = 1
            else:
                Min = min(Min, abs(nums1[i] - nums2[-1]) + 1)
                Min = min(Min, abs(nums2[i] - nums2[-1]) + 1)
        
        return Ans + Min
