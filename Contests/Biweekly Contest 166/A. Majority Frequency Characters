class Solution:
    def majorityFrequencyGroup(self, s: str) -> str:
        # sort characters
        chars = sorted(s)

        # dictionary: frequency -> list of chars
        freq_map = defaultdict(list)

        # count consecutive characters
        count = 1
        for i in range(1, len(chars) + 1):
            if i < len(chars) and chars[i] == chars[i - 1]:
                count += 1
            else:
                freq_map[count].append(chars[i - 1])
                count = 1

        # find the group with the maximum number of characters (Size)
        # if tie, prefer the larger frequency (K)
        Ans = ''
        Size = 0
        K = 0
        for x, y in freq_map.items():   # x=frequency, y=list of chars
            if len(y) > Size:
                Ans = ''.join(sorted(y))
                Size = len(y)
                K = x
            elif len(y) == Size and x > K:
                Ans = ''.join(sorted(y))
                Size = len(y)
                K = x

        return Ans
